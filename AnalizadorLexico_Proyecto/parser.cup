package comp;

import java_cup.runtime.*;

parser code
{:

public void syntax_error( Symbol s ){
	System.out.println("ERROR SINTACTICO. Linea: " + s.left+", columna: " + s.right );
}

public void unrecovered_syntax_error( Symbol s ) throws java.lang.Exception{
	System.out.println("ERROR SINTACTICO. El sistema no se pudo recuperar, linea");
}

:}

action code
{:
	Programa programa=new Programa();
	int tipo;
	int funcion=-1;		
:}


/*los terminales que aun no se usan*/
terminal CARACT_ESP;

terminal PAR_AB,PAR_CER,LLAV_AB,LLAV_CER,COR_AB,COR_CER ;
terminal IGUAL, OP_UNARIO, OP_BINARIO,OP_COMP,OP_COMP_L;
terminal CARACTER,ENTERO,FLOTANTE,CADENA,BOOLEANO;
terminal IF,ELSE,THEN,WHILE,DO;
terminal INPUT,OUTPUT,RETURN;


/*Desde cero*/
terminal String ID;
terminal COMA,DOSPUN,END;
terminal int CHAR,INT,FLOAT,STRING,BOOL,VOID;

non terminal PROGRAMA, DECLARACIONES;
non terminal TIPO,DEC_G,DEC_G1,DEC_V,DEC_V1;

PROGRAMA ::= DECLARACIONES ;

/*----DECLARACIONES GLOBALES----*/

DECLARACIONES::= DECLARACIONES DEC_G|DEC_G|DECLARACIONES DEC_V|DEC_V|error;

/*variables globales*/
DEC_G::= TIPO DOSPUN DEC_G1;
DEC_G1::= ID:r END {:programa.insertar_vglobales(tipo, r, rleft);:}
		| ID:r COMA DEC_G1 {:programa.insertar_vglobales(tipo, r, rleft);:} ; 
		
/*vectores*/		
DEC_V::= TIPO DOSPUN DEC_V1;
DEC_V1::= ID:r1 COR_AB ENTERO:r2 COR_CER END {:  programa.insertar_vectores(tipo,r1,(int) r2,r1left); :}
		| ID:r1 COR_AB ENTERO:r2 COR_CER COMA DEC_V1 {:  programa.insertar_vectores(tipo,r1,(int) r2,r1left); :};

/*tipos*/		
TIPO ::= INT:r {: tipo=r; :} 
		| FLOAT:r {: tipo=r;:}  
		| CHAR:r {: tipo=r;:} 
		| BOOL:r {: tipo=r;:}  
		| STRING:r {: tipo=r;:};


